{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\harsh2\\\\CSE\\\\React Development\\\\firebase_project\\\\src\\\\pages\\\\main\\\\posts.tsx\",\n  _s = $RefreshSig$();\nimport { addDoc, collection, getDocs, query, where, deleteDoc, doc } from \"firebase/firestore\";\nimport { db, auth } from \"../../config/firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Post = props => {\n  _s();\n  const {\n    post\n  } = props;\n  const [user] = useAuthState(auth);\n  const [likes, setLike] = useState(null);\n  const likesRef = collection(db, \"likes\");\n  const likesDoc = query(likesRef, where(\"postId\", \"==\", post.id));\n  const hasLiked = likes === null || likes === void 0 ? void 0 : likes.find(like => like.userId === (user === null || user === void 0 ? void 0 : user.uid));\n  const getLikes = async () => {\n    const data = await getDocs(likesDoc);\n    setLike(data.docs.map(doc => ({\n      userId: doc.data().userId,\n      likeId: doc.id\n    })));\n  };\n  const addLike = async () => {\n    try {\n      const newDoc = await addDoc(likesRef, {\n        userId: user === null || user === void 0 ? void 0 : user.uid,\n        postId: post.id\n      });\n      if (user) {\n        setLike(prev => prev ? [...prev, {\n          userId: user === null || user === void 0 ? void 0 : user.uid,\n          likeId: newDoc.id\n        }] : [{\n          userId: user.uid,\n          likeId: newDoc.id\n        }]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const removeLike = async () => {\n    try {\n      const likeToDeleteQuery = query(likesRef, where(\"postId\", \"==\", post.id), where(\"userId\", \"==\", user === null || user === void 0 ? void 0 : user.uid));\n      const likeToDeleteData = await getDocs(likeToDeleteQuery);\n      const likeId = likeToDeleteData.docs[0].id;\n      const likeToDelete = doc(db, \"likes\", likeToDeleteData.docs[0].id);\n      await deleteDoc(likeToDelete);\n      if (user) {\n        setLike(prev => prev && (prev === null || prev === void 0 ? void 0 : prev.filter(like => like.likeId === likeId)));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    getLikes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"@\", post.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: hasLiked ? removeLike : addLike,\n        children: hasLiked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"\\uD83D\\uDC4E\"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"\\uD83D\\uDC4D\"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Likes: \", likes === null || likes === void 0 ? void 0 : likes.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"TPmIkFi/O/cdrZcG5rfbJj7/pNA=\", false, function () {\n  return [useAuthState];\n});\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["addDoc","collection","getDocs","query","where","deleteDoc","doc","db","auth","useAuthState","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","props","_s","post","user","likes","setLike","likesRef","likesDoc","id","hasLiked","find","like","userId","uid","getLikes","data","docs","map","likeId","addLike","newDoc","postId","prev","err","console","log","removeLike","likeToDeleteQuery","likeToDeleteData","likeToDelete","filter","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","description","username","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/harsh2/CSE/React Development/firebase_project/src/pages/main/posts.tsx"],"sourcesContent":["import { Post as IPost} from \"./main\"\r\nimport { addDoc, collection, getDocs, query, where, deleteDoc, doc } from \"firebase/firestore\";\r\nimport { db, auth } from \"../../config/firebase\";\r\nimport { FirebaseError } from \"firebase/app\";\r\nimport { AuthStateHook, useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\ninterface Props {\r\n    post: IPost;\r\n}\r\n\r\ninterface Like {\r\n    likeId: string;\r\n    userId: string;\r\n}\r\n\r\nexport const Post = (props: Props) => {\r\n\r\n    const {post} = props;\r\n    const [user] = useAuthState(auth);\r\n    \r\n    const [likes, setLike] = useState<Like[] | null>(null);\r\n    const likesRef = collection(db, \"likes\");\r\n\r\n    const likesDoc = query (likesRef, where(\"postId\", \"==\", post.id));\r\n\r\n    const hasLiked = likes?.find((like) => like.userId === user?.uid)\r\n    const getLikes = async () => {\r\n        const data = await getDocs(likesDoc);\r\n        setLike(data.docs.map((doc) => ({ userId: doc.data().userId, likeId: doc.id})));\r\n    }\r\n\r\n    const addLike = async () => {\r\n        try {\r\n            const newDoc = await addDoc(likesRef, {\r\n                userId: user?.uid,\r\n                postId: post.id,\r\n            });\r\n            if (user) {\r\n                setLike((prev) => prev ? [...prev, {userId: user?.uid, likeId: newDoc.id}] : [{ userId: user.uid, likeId: newDoc.id}]);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        \r\n    }\r\n\r\n    const removeLike = async () => {\r\n        try {\r\n            const likeToDeleteQuery = query(likesRef, where(\"postId\", \"==\", post.id), where(\"userId\", \"==\", user?.uid));\r\n            \r\n            \r\n            const likeToDeleteData = await getDocs(likeToDeleteQuery);\r\n            const likeId = likeToDeleteData.docs[0].id;\r\n            const likeToDelete = doc(db, \"likes\", likeToDeleteData.docs[0].id);\r\n            \r\n            await deleteDoc(likeToDelete);\r\n\r\n            if (user) {\r\n                setLike((prev) => prev && prev?.filter((like) => like.likeId === likeId));\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getLikes();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"title\">\r\n                <h1>{post.title}</h1>\r\n            </div>\r\n            <div className=\"body\">\r\n                <p>{post.description}</p>\r\n            </div>\r\n            <div className=\"footer\">\r\n                <p>@{post.username}</p>\r\n                <button onClick={hasLiked ? removeLike : addLike }>{hasLiked ? <>&#128078;</> : <>&#128077;</>}</button>\r\n                <p>Likes: {likes?.length}</p>\r\n            </div>\r\n            <hr />\r\n        </div>\r\n    )   \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}