{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\harsh2\\\\CSE\\\\React Development\\\\firebase_project\\\\src\\\\pages\\\\create-post\\\\form.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { db, auth } from \"../../config/firebase\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateForm = () => {\n  _s();\n  var _errors$title, _errors$title2;\n  const navigate = useNavigate();\n  const [user] = useAuthState(auth);\n  const schema = yup.object().shape({\n    title: yup.string().required(\"You must add a title\"),\n    description: yup.string().required(\"You must add a description to the post...\")\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const postsRef = collection(db, \"posts\");\n  const onCreatePost = async data => {\n    await addDoc(postsRef, {\n      ...data,\n      //this helps in getting all the values from the data variable..\n      username: user === null || user === void 0 ? void 0 : user.displayName,\n      userId: user === null || user === void 0 ? void 0 : user.uid\n    });\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onCreatePost),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title...\",\n      ...register(\"title\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description...\",\n      ...register(\"description\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: (_errors$title2 = errors.title) === null || _errors$title2 === void 0 ? void 0 : _errors$title2.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateForm, \"zn1cr2/rXHSnPupvo2Uq65Yz8Rs=\", false, function () {\n  return [useNavigate, useAuthState, useForm];\n});\n_c = CreateForm;\nvar _c;\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"names":["useForm","yup","yupResolver","addDoc","collection","db","auth","useAuthState","useNavigate","jsxDEV","_jsxDEV","CreateForm","_s","_errors$title","_errors$title2","navigate","user","schema","object","shape","title","string","required","description","register","handleSubmit","formState","errors","resolver","postsRef","onCreatePost","data","username","displayName","userId","uid","onSubmit","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","color","message","value","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/harsh2/CSE/React Development/firebase_project/src/pages/create-post/form.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup'; \r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport { db, auth } from \"../../config/firebase\";\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\ninterface CreateFormData {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport const CreateForm = () => {\r\n    const navigate = useNavigate();\r\n    const [ user ] = useAuthState(auth);\r\n\r\n    const schema = yup.object().shape({\r\n        title: yup.string().required(\"You must add a title\"),\r\n        description: yup.string().required(\"You must add a description to the post...\"),\r\n    });\r\n\r\n    const { register, handleSubmit, formState: {errors} } = useForm<CreateFormData>({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const postsRef = collection(db, \"posts\");\r\n\r\n    const onCreatePost = async (data:any) => {\r\n        await addDoc(postsRef, {\r\n            ...data,   //this helps in getting all the values from the data variable..\r\n            username: user?.displayName,\r\n            userId: user?.uid,\r\n        });\r\n\r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onCreatePost)}>\r\n            <input type=\"text\" placeholder=\"Title...\" {...register(\"title\")}/>\r\n            <p style={{color: \"red\"}}>{errors.title?.message}</p>\r\n            <textarea placeholder=\"Description...\" {...register(\"description\")}/>\r\n            <p style={{color: \"red\"}}>{errors.title?.message}</p>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}